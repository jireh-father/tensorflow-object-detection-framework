import tensorflow as tf


def build_model(inputs, is_training=None):
    # input 448x448 for fine tuning and test, 224x224 for pre-training
    net = tf.layers.conv2d(inputs, 64, 7, 2, padding="same")
    net = tf.nn.leaky_relu(net, 0.1)
    net = tf.layers.max_pooling2d(net, 2, 2)

    net = tf.layers.conv2d(net, 192, 3, padding="same")
    net = tf.nn.leaky_relu(net, 0.1)
    net = tf.layers.max_pooling2d(net, 2, 2)

    net = tf.layers.conv2d(net, 128, 1, padding="same")
    net = tf.nn.leaky_relu(net, 0.1)
    net = tf.layers.conv2d(net, 256, 3, padding="same")
    net = tf.nn.leaky_relu(net, 0.1)
    net = tf.layers.conv2d(net, 256, 1, padding="same")
    net = tf.nn.leaky_relu(net, 0.1)
    net = tf.layers.conv2d(net, 512, 3, padding="same")
    net = tf.nn.leaky_relu(net, 0.1)
    net = tf.layers.max_pooling2d(net, 2, 2)

    net = tf.layers.conv2d(net, 256, 1, padding="same")
    net = tf.nn.leaky_relu(net, 0.1)
    net = tf.layers.conv2d(net, 512, 3, padding="same")
    net = tf.nn.leaky_relu(net, 0.1)
    net = tf.layers.conv2d(net, 256, 1, padding="same")
    net = tf.nn.leaky_relu(net, 0.1)
    net = tf.layers.conv2d(net, 512, 3, padding="same")
    net = tf.nn.leaky_relu(net, 0.1)
    net = tf.layers.conv2d(net, 256, 1, padding="same")
    net = tf.nn.leaky_relu(net, 0.1)
    net = tf.layers.conv2d(net, 512, 3, padding="same")
    net = tf.nn.leaky_relu(net, 0.1)
    net = tf.layers.conv2d(net, 256, 1, padding="same")
    net = tf.nn.leaky_relu(net, 0.1)
    net = tf.layers.conv2d(net, 512, 3, padding="same")
    net = tf.nn.leaky_relu(net, 0.1)
    net = tf.layers.conv2d(net, 256, 1, padding="same")
    net = tf.nn.leaky_relu(net, 0.1)
    net = tf.layers.conv2d(net, 512, 3, padding="same")
    net = tf.nn.leaky_relu(net, 0.1)
    net = tf.layers.conv2d(net, 512, 1, padding="same")
    net = tf.nn.leaky_relu(net, 0.1)
    net = tf.layers.conv2d(net, 1024, 3, padding="same")
    net = tf.nn.leaky_relu(net, 0.1)
    net = tf.layers.max_pooling2d(net, 2, 2)

    net = tf.layers.conv2d(net, 512, 1, padding="same")
    net = tf.nn.leaky_relu(net, 0.1)
    net = tf.layers.conv2d(net, 1024, 3, padding="same")
    net = tf.nn.leaky_relu(net, 0.1)
    net = tf.layers.conv2d(net, 512, 1, padding="same")
    net = tf.nn.leaky_relu(net, 0.1)
    net = tf.layers.conv2d(net, 1024, 3, padding="same")
    net = tf.nn.leaky_relu(net, 0.1)
    net = tf.layers.conv2d(net, 1024, 3, padding="same")
    net = tf.nn.leaky_relu(net, 0.1)
    net = tf.layers.conv2d(net, 1024, 3, 2, padding="same")
    net = tf.nn.leaky_relu(net, 0.1)

    net = tf.layers.conv2d(net, 1024, 3, padding="same")
    net = tf.nn.leaky_relu(net, 0.1)
    net = tf.layers.conv2d(net, 1024, 3, padding="same")
    net = tf.nn.leaky_relu(net, 0.1)
    print(net)
    net = tf.reshape(net, [-1, int(net.get_shape()[1]) * int(net.get_shape()[2]) * int(net.get_shape()[3])])
    print(net)

    net = tf.layers.dense(net, 4096)
    net = tf.nn.leaky_relu(net, 0.1)
    net = tf.layers.dropout(net, 0.5, training=is_training)

    net = tf.layers.dense(net, 7 * 7 * 30)
    net = tf.reshape(net, [-1, 7, 7, 30])
    print(net)
    return net
